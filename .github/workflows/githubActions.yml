# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: RestAssured CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# Add permissions for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 13
      uses: actions/setup-java@v1
      with:
        java-version: '13'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: mvn clean test -D TestNgXml=PetStore.xml

    - name: Generate Allure Report
      if: always()
      run: mvn allure:report

    - name: Create reports directory structure
      if: always()
      shell: pwsh
      run: |
        $buildId = "${{ github.run_number }}"
        $commitHash = "${{ github.sha }}".Substring(0,7)
        
        # Create main reports directory
        New-Item -ItemType Directory -Force -Path "./target/site/reports"
        
        # Create build-specific directories
        $allureDir = "./target/site/reports/allure-report-build-$buildId"
        $extentDir = "./target/site/reports/extent-report-build-$buildId"
        
        New-Item -ItemType Directory -Force -Path $allureDir
        New-Item -ItemType Directory -Force -Path $extentDir
        
        # Copy Allure reports
        if (Test-Path "./target/site/allure-maven-plugin") {
            Copy-Item -Path "./target/site/allure-maven-plugin/*" -Destination $allureDir -Recurse -Force
        }
        
        # Copy Extent reports (check multiple possible locations)
        $extentSources = @("./ExtentReports", "./target/ExtentReports", "./reports")
        foreach ($source in $extentSources) {
            if (Test-Path $source) {
                Get-ChildItem -Path $source -Filter "*.html" | ForEach-Object {
                    Copy-Item -Path $_.FullName -Destination $extentDir -Force
                }
            }
        }

    - name: Create index page
      if: always()
      shell: pwsh
      run: |
        $buildId = "${{ github.run_number }}"
        $commitHash = "${{ github.sha }}".Substring(0,7)
        $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC"
        
        # Create HTML content using PowerShell here-string
        $htmlContent = @'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Test Reports - Build {0}</title>
            <style>
                body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif; margin: 40px; }
                .header { background: #f8f9fa; padding: 20px; border-radius: 8px; margin-bottom: 30px; }
                .reports { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; }
                .report-card { border: 1px solid #e1e5e9; border-radius: 8px; padding: 20px; background: white; }
                .report-card h3 { margin-top: 0; color: #0366d6; }
                .report-link { display: inline-block; padding: 10px 16px; background: #0366d6; color: white; text-decoration: none; border-radius: 6px; margin-top: 10px; }
                .report-link:hover { background: #0356cc; }
                .info { color: #586069; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>üìù Rest Assured Reports</h1>
                <div class="info">
                    <p><strong>Build:</strong> #{0}</p>
                    <p><strong>Commit:</strong> {1}</p>
                    <p><strong>Generated:</strong> {2}</p>
                </div>
            </div>
            <div class="reports">
                <div class="report-card">
                    <h3>üìä Allure Report</h3>
                    <p>Comprehensive test execution report with detailed analytics, test history, and failure analysis.</p>
                    <a href="allure-report-build-{0}/index.html" class="report-link">View Allure Report</a>
                </div>
                <div class="report-card">
                    <h3>üìù Extent Report</h3>
                    <p>Native Extent test report with logs.</p>
                    <a href="extent-report-build-{0}/ExtentReport.html" class="report-link">View Extent Report</a>
                </div>
            </div>
        </body>
        </html>
# '@
        
#         # Format the HTML content with the variables
#         $htmlContent = $htmlContent -f $buildId, $commitHash, $timestamp
        
#         # Ensure the directory exists and write the content
#         New-Item -ItemType Directory -Force -Path "./target/site/reports"
#         Set-Content -Path "./target/site/reports/index.html" -Value $htmlContent -Encoding UTF8

    - name: Setup Pages
      if: always()
      uses: actions/configure-pages@v5
      
    - name: Upload artifact
      if: always()
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./target/site/reports
        
    - name: Deploy to GitHub Pages
      if: always()
      id: deployment
      uses: actions/deploy-pages@v4
